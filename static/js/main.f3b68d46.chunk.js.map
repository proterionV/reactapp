{"version":3,"sources":["Components/Overlay.js","Components/Menu.js","Components/Table.js","Components/Graph.js","Components/Field.js","App.js","index.js"],"names":["Overlay","className","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","type","React","Component","Menu","onShow","document","getElementById","id","Table","this","props","data","map","activity","isEdit","editable","userID","onUpdate","onChangeMode","onRemove","Row","dateRegistration","dateLastActivity","onClick","RowEdit","onChangeNewReg","e","setState","target","value","onChangeNewLast","state","split","reverse","join","bind","onChange","bellCurve","Highcharts","GraphData","title","text","xAxis","alignTicks","opposite","yAxis","plotOptions","histogram","accessibility","pointDescriptionFormatter","point","index","x","toFixed","x2","y","series","name","baseSeries","zIndex","Graph","nextProps","highcharts","options","oneToOne","allowChartUpdate","updateArgs","Field","onChangeID","Math","round","onChangeReg","onChangeLast","newDateReg","newDateLast","onSave","a","parseInt","length","alert","activities","filter","Date","getTime","requestOptions","method","headers","body","JSON","stringify","fetch","response","ok","current","json","push","console","error","status","log","newActivities","forEach","daysByActivity","onRemoveUser","splice","parameters","onCalculate","values","sort","result","errors","loading","placeholder","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f3b68d46.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default class Overlay extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n\r\n                <div className=\"block-title\">\r\n                    <h2 className=\"title-text\">AB Test Real</h2>\r\n                </div>\r\n\r\n                <div className=\"block-input\">\r\n                    <svg className=\"search\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.8929 11.6086L17.7348 16.4505C17.905 16.6208 18.0005 16.8518 18.0004 17.0925C18.0004 17.3333 17.9046 17.5641 17.7343 17.7343C17.564 17.9045 17.3331 18.0001 17.0923 18C16.8516 17.9999 16.6207 17.9042 16.4505 17.7339L11.6086 12.892C10.1612 14.0131 8.34104 14.5406 6.51844 14.3674C4.69585 14.1941 3.00771 13.333 1.79746 11.9593C0.587216 10.5855 -0.0542374 8.80231 0.00359662 6.97241C0.0614306 5.14251 0.814208 3.40337 2.10879 2.10879C3.40337 0.814208 5.14251 0.0614306 6.97241 0.00359662C8.80231 -0.0542374 10.5855 0.587216 11.9593 1.79746C13.333 3.00771 14.1941 4.69585 14.3674 6.51844C14.5406 8.34104 14.0131 10.1612 12.892 11.6086H12.8929ZM7.20051 12.5995C8.63265 12.5995 10.0061 12.0306 11.0188 11.0179C12.0315 10.0052 12.6004 8.63175 12.6004 7.19961C12.6004 5.76748 12.0315 4.39399 11.0188 3.38132C10.0061 2.36865 8.63265 1.79973 7.20051 1.79973C5.76838 1.79973 4.3949 2.36865 3.38222 3.38132C2.36955 4.39399 1.80063 5.76748 1.80063 7.19961C1.80063 8.63175 2.36955 10.0052 3.38222 11.0179C4.3949 12.0306 5.76838 12.5995 7.20051 12.5995Z\" fill=\"#BBBBBB\"/>\r\n                    </svg> \r\n\r\n                    <input className=\"input-search\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"block-photo\">\r\n                    <div className=\"photo\"></div>\r\n                </div>   \r\n\r\n                <div className=\"block-exit\">\r\n                    <svg className=\"exit\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M7.79 13.29C8.18 13.68 8.81 13.68 9.2 13.29L12.79 9.7C12.8827 9.60749 12.9563 9.4976 13.0064 9.37662C13.0566 9.25565 13.0824 9.12597 13.0824 8.995C13.0824 8.86403 13.0566 8.73435 13.0064 8.61338C12.9563 8.4924 12.8827 8.38251 12.79 8.29L9.2 4.7C9.01302 4.51302 8.75943 4.40798 8.495 4.40798C8.23057 4.40798 7.97698 4.51302 7.79 4.7C7.60302 4.88698 7.49798 5.14057 7.49798 5.405C7.49798 5.66943 7.60302 5.92302 7.79 6.11L9.67 8H1C0.45 8 0 8.45 0 9C0 9.55 0.45 10 1 10H9.67L7.79 11.88C7.4 12.27 7.41 12.91 7.79 13.29ZM16 0H2C1.46957 0 0.960859 0.210714 0.585786 0.585786C0.210714 0.960859 0 1.46957 0 2V5C0 5.55 0.45 6 1 6C1.55 6 2 5.55 2 5V3C2 2.45 2.45 2 3 2H15C15.55 2 16 2.45 16 3V15C16 15.55 15.55 16 15 16H3C2.45 16 2 15.55 2 15V13C2 12.45 1.55 12 1 12C0.45 12 0 12.45 0 13V16C0 17.1 0.9 18 2 18H16C17.1 18 18 17.1 18 16V2C18 0.9 17.1 0 16 0Z\" fill=\"#5D6D97\"/>\r\n                    </svg>\r\n                </div>\r\n\r\n            </header>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Menu extends React.Component {\r\n\r\n    onShow = () => {\r\n        document.getElementById(\"lis\").className=\"show\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n\r\n                <div id=\"switch\" className=\"off\">\r\n                    <button className=\"slider\">Projects</button>\r\n                </div>\r\n\r\n                {/* <div id=\"lis\" className=\"hide\">\r\n                    <li>Add Project</li>\r\n                </div> */}\r\n\r\n                <div>\r\n                    <button className=\"btn-menu\">Account</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <button className=\"btn-menu\">Support</button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class Table extends React.Component {\r\n    render() {\r\n        return (\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User ID</th>\r\n                            <th>Registration</th>\r\n                            <th>Last Activity</th>\r\n                            <th>Active</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>{\r\n                        this.props.data.map(activity => {\r\n                            return (\r\n                                this.props.isEdit && this.props.editable === activity.userID ? \r\n                                <RowEdit \r\n                                    activity={activity} \r\n                                    onUpdate={this.props.onUpdate} \r\n                                    onChangeMode={this.props.onChangeMode}\r\n                                    key={activity.userID} /> \r\n                                    :\r\n                                <Row \r\n                                    activity={activity} \r\n                                    onRemove={this.props.onRemove} \r\n                                    onChangeMode={this.props.onChangeMode}\r\n                                    key={activity.userID} />\r\n                        )})\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n        )\r\n    }\r\n}\r\n\r\nclass Row extends React.Component {\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.activity.userID}</td>\r\n                <td>{this.props.activity.dateRegistration}</td>\r\n                <td>{this.props.activity.dateLastActivity}</td>\r\n                <td>\r\n                    <button className=\"edit-btn\" onClick={() => this.props.onChangeMode(this.props.activity.userID)}>EditMode</button>\r\n                    <button className=\"remove-btn\" onClick={() => this.props.onRemove(this.props.activity.userID)}>Remove</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass RowEdit extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            dateRegistration: this.props.activity.dateRegistration.split(\".\").reverse().join(\"-\"), \r\n            dateLastActivity: this.props.activity.dateLastActivity.split(\".\").reverse().join(\"-\")\r\n        }\r\n\r\n        this.onChangeNewReg = this.onChangeNewReg.bind(this)\r\n        this.onChangeNewLast = this.onChangeNewLast.bind(this)  \r\n    }\r\n\r\n    onChangeNewReg = e => this.setState({dateRegistration: e.target.value})\r\n    onChangeNewLast = e => this.setState({dateLastActivity: e.target.value})\r\n\r\n    render() {\r\n        return (\r\n            <tr id={this.props.activity.userID} key={this.props.activity.userID}>\r\n                <td>{this.props.activity.userID}</td>\r\n                <td><input className=\"change-dt\" type=\"date\" value={this.state.dateRegistration} onChange={this.onChangeNewReg} /></td>\r\n                <td><input className=\"change-dt\" type=\"date\" value={this.state.dateLastActivity} onChange={this.onChangeNewLast} /></td>\r\n                <td>\r\n                    <button className=\"save-btn\" onClick={() => this.props.onUpdate(this.props.activity.userID, this.state.dateRegistration, this.state.dateLastActivity)}>Save</button>\r\n                    <button className=\"remove-btn\" onClick={() => this.props.onChangeMode(this.props.activity.userID)}>Cancel</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport bellCurve from 'highcharts/modules/histogram-bellcurve';\r\nbellCurve(Highcharts);\r\n\r\nconst GraphData = {\r\n    title: {\r\n        text: 'Activities Histogram'\r\n    },\r\n\r\n    xAxis: [{\r\n        alignTicks: false\r\n    }, {\r\n        title: { text: 'Days of activity' },\r\n        alignTicks: false,\r\n        opposite: true\r\n    }],\r\n\r\n    yAxis: [{\r\n        title: { text: '' }\r\n    }, {\r\n        title: { text: 'Frequency' },\r\n        opposite: true\r\n    }],\r\n\r\n    plotOptions: {\r\n        histogram: {\r\n            accessibility: {\r\n                pointDescriptionFormatter: function (point) {\r\n                    var ix = point.index + 1,\r\n                        x1 = point.x.toFixed(3),\r\n                        x2 = point.x2.toFixed(3),\r\n                        val = point.y;\r\n                    return ix + '. ' + x1 + ' to ' + x2 + ', ' + val + '.';\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    series: [{\r\n        name: 'Histogram',\r\n        type: 'histogram',\r\n        xAxis: 1,\r\n        yAxis: 1,\r\n        baseSeries: 's1',\r\n        zIndex: -1\r\n    }, {\r\n        name: 'Data',\r\n        data: [0],\r\n        id: 's1'\r\n    }]\r\n};\r\n\r\nexport default class Graph extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {data: this.props.data}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.data !== this.props.data) {\r\n            GraphData.series[1].data = nextProps.data\r\n            this.setState({data: nextProps.data})\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <HighchartsReact \r\n                highcharts={Highcharts}\r\n                options={GraphData}\r\n                oneToOne={true}\r\n                allowChartUpdate={true}\r\n                updateArgs={[true, true, true]}\r\n            />\r\n        )\r\n    }\r\n} ","import React from 'react';\r\nimport Table from './Table.js'\r\nimport Graph from './Graph.js'\r\n\r\nexport default class Field extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userID: '', \r\n            dateRegistration: '', \r\n            dateLastActivity: '',\r\n            activities: [],\r\n            parameters: [],\r\n            result: '',\r\n            isEdit: false,\r\n            editable: '',\r\n            loading: true\r\n        };\r\n\r\n        this.onChangeID = this.onChangeID.bind(this)\r\n        this.onChangeReg = this.onChangeReg.bind(this)\r\n        this.onChangeLast = this.onChangeLast.bind(this)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n\r\n        try {\r\n            const response = await fetch('https://mainapi-react.appspot.com/main/all', requestOptions);\r\n            const data = await response.json();\r\n\r\n            if (response.ok) \r\n            {\r\n                const values = []\r\n\r\n                data.forEach(activity => {\r\n                    values.push(activity.daysByActivity)\r\n                });\r\n\r\n                values.sort(function(x, y) {\r\n                        if (x > y) {\r\n                          return 1;\r\n                        }\r\n                        if (x < y) {\r\n                          return -1;\r\n                        }\r\n                        return 0;\r\n                      });\r\n\r\n                this.setState({activities: data, parameters: values})\r\n            }\r\n            else {\r\n                try {\r\n                    alert(JSON.stringify(data.errors))\r\n                }\r\n                catch {\r\n                    alert(data)\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            alert(\"Отсутствует соединение с сервером\")\r\n        }\r\n\r\n        this.setState({loading: false})\r\n    }\r\n\r\n    onChangeID = e => this.setState({userID: Math.round(e.target.value, 0)})\r\n    onChangeReg = e => this.setState({dateRegistration: e.target.value})\r\n    onChangeLast = e => this.setState({dateLastActivity: e.target.value})\r\n\r\n    onChangeMode = userID => { \r\n\r\n        if (this.state.isEdit && userID !== this.state.editable) return;\r\n\r\n        this.setState({\r\n            editable: this.state.isEdit ? '' : userID,\r\n            isEdit: this.state.isEdit ? false : true,\r\n            newDateReg: '',\r\n            newDateLast: ''\r\n        }) \r\n    } \r\n\r\n    onSave = async () => {\r\n        if (parseInt(this.state.userID) < 0 || this.state.userID.length < 1) {\r\n            alert(\"Некорректный идентификатор\")\r\n            return;\r\n        }\r\n\r\n        if (this.state.dateRegistration.length < 1 || this.state.dateLastActivity.length < 1) {\r\n            alert(\"Некорректная дата\")\r\n            return;\r\n        }\r\n          \r\n        var same = this.state.activities.filter(activity => activity.userID === this.state.userID)\r\n\r\n        if (same.length > 0) {\r\n            alert(\"Пользователь с таким идентификатором уже существует\")\r\n            return;\r\n        }\r\n\r\n        if (new Date(this.state.dateRegistration).getTime() > new Date(this.state.dateLastActivity).getTime()){\r\n            alert(\"Дата регистрации должна быть раньше даты последней активности\")\r\n            return;\r\n        }\r\n\r\n        if (new Date().getTime() < new Date(this.state.dateRegistration).getTime || new Date().getTime() < new Date(this.state.dateLastActivity).getTime()) {\r\n            alert(\"Дата не может быть больше текущей\")\r\n            return;\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                userID: this.state.userID,\r\n                dateRegistration: this.state.dateRegistration,\r\n                dateLastActivity: this.state.dateLastActivity\r\n            })\r\n        };\r\n\r\n        try {\r\n\r\n            const response = await fetch('https://mainapi-react.appspot.com/main/saveone', requestOptions)\r\n\r\n            if (response.ok) \r\n            {\r\n                const current = this.state.activities\r\n                const data = await response.json()\r\n                current.push(data)\r\n                this.setState({ activities: current })\r\n            }\r\n            else {\r\n                console.error(response.body) \r\n                alert(\"Ошибка запроса: \" + response.status)\r\n            }\r\n        } \r\n        catch (ex) {\r\n            console.error(ex)\r\n            alert(ex)\r\n        }\r\n\r\n        this.setState({userID: '', dateRegistration: '', dateLastActivity: ''})\r\n    }\r\n\r\n    onUpdate = async (userID, dateRegistration, dateLastActivity) => {\r\n        if (dateRegistration.length < 1 || dateLastActivity.length < 1) {\r\n            alert(\"Некорректная дата\")\r\n            return;\r\n        }\r\n\r\n        if (new Date(dateRegistration).getTime() > new Date(dateLastActivity).getTime()){\r\n            alert(\"Дата регистрации должна быть раньше даты последней активности\")\r\n            return;\r\n        }\r\n\r\n        if (new Date().getTime() < new Date(dateRegistration).getTime || new Date().getTime() < new Date(dateLastActivity).getTime()) {\r\n            alert(\"Дата не может быть больше текущей\")\r\n            return;\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                userID: userID,\r\n                dateRegistration: dateRegistration,\r\n                dateLastActivity: dateLastActivity\r\n            })\r\n        };\r\n\r\n        try {\r\n\r\n            const response = await fetch('https://mainapi-react.appspot.com/main/update', requestOptions)\r\n            console.log(response)\r\n            if (response.ok) \r\n            {\r\n                const data = await response.json()\r\n                const newActivities = this.state.activities;\r\n                newActivities.forEach(function (activity) {\r\n                    if (activity.userID === userID) {\r\n                        activity.dateRegistration = data.dateRegistration\r\n                        activity.dateLastActivity = data.dateLastActivity\r\n                        activity.daysByActivity = data.daysByActivity\r\n                    }    \r\n                  });\r\n\r\n                this.setState({ activities: newActivities })\r\n            }\r\n            else {\r\n                console.error(response.body) \r\n                alert(\"Ошибка \" + response.status)\r\n            }\r\n        } \r\n        catch (ex) {\r\n            console.error(ex)\r\n            alert(ex)\r\n        }\r\n\r\n        this.onChangeMode(userID)\r\n    }\r\n\r\n    onRemoveUser = async (userID) => {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`https://mainapi-react.appspot.com/main/removeone/${userID}`, requestOptions);\r\n\r\n            if (response.ok) \r\n            {\r\n                const activities = this.state.activities\r\n                activities.forEach((activity, index) => { if (activity.userID === userID) activities.splice(index, 1)})\r\n                if (activities.length < 1) this.setState({parameters: []}) \r\n                this.setState({activities: activities})\r\n            }\r\n            else {\r\n                console.error(response.text()) \r\n                alert(\"Ошибка запроса: \" + response.status)\r\n            }\r\n        }\r\n        catch (ex) {\r\n            console.log(ex)\r\n            alert(ex)\r\n        }\r\n    }\r\n\r\n    onCalculate = async () => {\r\n        if (this.state.activities.length < 1) return;\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n\r\n        try {\r\n            const response = await fetch('https://mainapi-react.appspot.com/main/retention', requestOptions);\r\n            const data = await response.json(); \r\n\r\n            if (response.ok) \r\n            {\r\n                const values = []\r\n\r\n                this.state.activities.forEach(activity => {\r\n                    values.push(activity.daysByActivity)\r\n                });\r\n\r\n                values.sort(function(x, y) {\r\n                        if (x > y) {\r\n                          return 1;\r\n                        }\r\n                        if (x < y) {\r\n                          return -1;\r\n                        }\r\n                        return 0;\r\n                      });\r\n\r\n                this.setState({result: `Rolling Retention 7 day: ${data.result} %`, parameters: values})\r\n            }\r\n            else {\r\n                try {\r\n                    alert(JSON.stringify(data.errors))\r\n                }\r\n                catch {\r\n                    alert(data)\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            console.log(ex)\r\n            alert(ex)\r\n        }\r\n\r\n        document.getElementById(\"graph\").className = \"graph\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"field\">\r\n\r\n                <div className=\"in\">\r\n                    <h1 className=\"field-title\">Activities</h1>\r\n\r\n                    <div className=\"input-place\">\r\n                        <input className=\"input-id\" type=\"number\" value={this.state.userID} onChange={this.onChangeID} placeholder = \"User ID\" />\r\n                        <input className=\"input-reg\" type=\"date\" value={this.state.dateRegistration} onChange={this.onChangeReg} />\r\n                        <input className=\"input-reg\" type=\"date\" value={this.state.dateLastActivity} onChange={this.onChangeLast} />\r\n                        <button type=\"submit\" className=\"input-btn\" onClick={this.onSave}>Save</button>\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.loading ? <div className=\"lds-dual-ring\"></div> :\r\n                        this.state.activities.length > 0 &&\r\n                        <Table \r\n                            editable={this.state.editable}\r\n                            data={this.state.activities} \r\n                            isEdit={this.state.isEdit}\r\n                            onChangeMode={this.onChangeMode}  \r\n                            onRemove={this.onRemoveUser}\r\n                            onUpdate={this.onUpdate}\r\n                        />\r\n                    }\r\n                    \r\n                    {\r\n                        this.state.activities.length > 0 &&\r\n                        <div className=\"calculate-place\">\r\n                            <h3 className=\"retention\">{this.state.result}</h3>\r\n                            <button type=\"submit\" className=\"calculate\" onClick={this.onCalculate}>Calculate</button>\r\n                        </div>\r\n                    }\r\n                    \r\n                    {\r\n                        this.state.parameters.length > 0 &&\r\n                        <div id=\"graph\" className=\"graph-none\">\r\n                            <Graph data={this.state.parameters} />\r\n                        </div>\r\n                    }\r\n\r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n}     ","import React from 'react'\nimport './App.css';\nimport Overlay from './Components/Overlay.js'\nimport Menu from './Components/Menu.js'\nimport Field from './Components/Field.js'\n\nfunction App() {\n  return (\n    <div>\n\n        <Overlay />\n\n        <Menu />\n\n        <Field />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n  \n   <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}